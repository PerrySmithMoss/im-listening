{"version":3,"file":"main.aa34236e390ef8b467e2.hot-update.js","sources":["webpack:///\\.)(?69fc","webpack:///./stories/components/Logo/Logo.stories.tsx","webpack:///./stories/components/Logo/Logo.tsx"],"sourcesContent":["var map = {\n\t\"./Header.stories.tsx\": \"./stories/Header.stories.tsx\",\n\t\"./Page.stories.tsx\": \"./stories/Page.stories.tsx\",\n\t\"./components/Button.stories.tsx\": \"./stories/components/Button.stories.tsx\",\n\t\"./components/Logo/Logo.stories.tsx\": \"./stories/components/Logo/Logo.stories.tsx\",\n\t\"./components/Navbar/Navbar.stories.tsx\": \"./stories/components/Navbar/Navbar.stories.tsx\",\n\t\"./pages/Home.stories.tsx\": \"./stories/pages/Home.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Story, Meta } from '@storybook/react';\\n\\nimport { Logo, LogoProps } from './Logo';\\n\\nexport default {\\n  title: 'Components/Logo',\\n  component: Logo,\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n} as Meta;\\n\\nconst Template: Story<LogoProps> = (args) => <Logo {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  primary: true,\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n};\\n\\n// export const Large = Template.bind({});\\n// Large.args = {\\n//   size: 'large',\\n//   label: 'Button',\\n// };\\n\\n// export const Small = Template.bind({});\\n// Small.args = {\\n//   size: 'small',\\n//   label: 'Button',\\n// };\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":35,\"line\":14},\"endLoc\":{\"col\":63,\"line\":14},\"startBody\":{\"col\":35,\"line\":14},\"endBody\":{\"col\":63,\"line\":14}},\"Secondary\":{\"startLoc\":{\"col\":35,\"line\":14},\"endLoc\":{\"col\":63,\"line\":14},\"startBody\":{\"col\":35,\"line\":14},\"endBody\":{\"col\":63,\"line\":14}}};\n    \nimport React from 'react';\nimport { Story, Meta } from '@storybook/react';\n\nimport { Logo, LogoProps } from './Logo';\n\nexport default {\n  title: 'Components/Logo',\n  component: Logo,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n} as Meta;\n\nconst Template: Story<LogoProps> = (args) => <Logo {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n  primary: true,\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n};\n\n// export const Large = Template.bind({});\n// Large.args = {\n//   size: 'large',\n//   label: 'Button',\n// };\n\n// export const Small = Template.bind({});\n// Small.args = {\n//   size: 'small',\n//   label: 'Button',\n// };\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Logo {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Logo {...args} />\" }, ...Secondary.parameters };","import React from 'react';\nimport './logo.css';\nconst Headphones2 = require(\"../assets/headphones2.svg\") as string;\n\nexport interface LogoProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Logo: React.FC<LogoProps> = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor,\n  ...props\n}) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    // <button\n    //   type=\"button\"\n    //   className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n    //   style={{ backgroundColor }}\n    //   {...props}\n    // >\n    //   {label}\n    // </button>\n    <img\n    className=\"headphones-logo\"\n    src=\"../assets/headphones2.svg\"\n    alt=\"I'm Listeninglogo\"\n  />\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AADA;AAIA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;;;AACA;AACA;AAuBA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AATA;AAeA;AAtBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}