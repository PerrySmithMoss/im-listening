{"version":3,"file":"main.434941dd02a702be6885.hot-update.js","sources":["webpack:///\\.)(?69fc","webpack:///./stories/pages/Button.stories.tsx"],"sourcesContent":["var map = {\n\t\"./components/Header.stories.tsx\": \"./stories/components/Header.stories.tsx\",\n\t\"./components/Logo/Logo.stories.tsx\": \"./stories/components/Logo/Logo.stories.tsx\",\n\t\"./components/Navbar/Navbar.stories.tsx\": \"./stories/components/Navbar/Navbar.stories.tsx\",\n\t\"./pages/Button.stories.tsx\": \"./stories/pages/Button.stories.tsx\",\n\t\"./pages/Home.stories.tsx\": \"./stories/pages/Home.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Story, Meta } from '@storybook/react';\\n\\nimport { Button, ButtonProps } from './Button';\\n\\nexport default {\\n  title: 'Example/Button',\\n  component: Button,\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n} as Meta;\\n\\nconst Template: Story<ButtonProps> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  primary: true,\\n  color: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  color: true,\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  color: true,\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  color: true,\\n  size: 'small',\\n  label: 'Button',\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":37,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":37,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}},\"Secondary\":{\"startLoc\":{\"col\":37,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":37,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}},\"Large\":{\"startLoc\":{\"col\":37,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":37,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}},\"Small\":{\"startLoc\":{\"col\":37,\"line\":14},\"endLoc\":{\"col\":67,\"line\":14},\"startBody\":{\"col\":37,\"line\":14},\"endBody\":{\"col\":67,\"line\":14}}};\n    \nimport React from 'react';\nimport { Story, Meta } from '@storybook/react';\n\nimport { Button, ButtonProps } from './Button';\n\nexport default {\n  title: 'Example/Button',\n  component: Button,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n} as Meta;\n\nconst Template: Story<ButtonProps> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n  primary: true,\n  color: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  color: true,\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  color: true,\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  color: true,\n  size: 'small',\n  label: 'Button',\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Small.parameters };"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}